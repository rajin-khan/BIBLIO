Possible entities:

1. Customers

2. Admin

3. Authors

4. Books

5. Available

6. Borrowed

7. Requested

Attributes for entities:

1. Customers: - cust_name (varchar)
              - cust_email (varchar)
              - cust_phone (int)
              - username (varchar) *PRIMARY KEY*
              - cust_pass (varchar)
              - cust_DOB (date)

2. Admin: - admin_name (varchar)
          - admin_email (varchar)
          - admin_phone (int)
          - admin_ID (int) *PRIMARY KEY*
          - admin_pass (varchar)
          - admin_DOB (date)
          - shift (varchar)

3. Author: - author_name (varchar)
           - author_ID (int) *PRIMARY KEY*

4. Books: - ISBN (int) *PRIMARY KEY*
          - book_name (varchar)
          - language (varchar)
          - genre (varchar)
          - author_ID *FOREIGN KEY*
          - rating (double)
          - date_added (date)

5. Available: - ISBN *FOREIGN KEY* *PRIMARY KEY*
              - book_name *FOREIGN KEY*
              - av_copies (int) *PARTIAL KEY*

6. Borrowed: - username *FOREIGN KEY* *PRIMARY KEY*
             - ISBN *FOREIGN KEY* *PRIMARY KEY*
             - date_borrowed (date)
             - bor_copies (int) *PARTIAL KEY*

7. Requested: - req_bookname (varchar)
              - req_ISBN (int) *PRIMARY KEY*
              - req_authorname (varchar)
              - author_exists (bool) [to check if the author already exists in the library databse, if so, this info will not be added. if so, a new author_ID will be generated.]

Relationships will be established in a separate file using drawio. Chen's notation shall be used, instead of Crow's foot notation.

(add an attribute copies to books, create a relationship sees instead of available entity,
[to see the available books if the number of copies > 0 * integrity constraint], and add another relationship has_borrowed to books instead of an entity.)